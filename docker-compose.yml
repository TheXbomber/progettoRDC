services:

  nginx:
    image: nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    container_name: "nginx"
    links:
      - app_serv1:appserv1
      - app_serv2:appserv2
      - app_serv3:appserv3
    depends_on:
      - app_serv1
      - app_serv2
      - app_serv3
    ports:
      - "8080:80"

  app_serv1:
    image: node:16
    build:
      context: ./app_serv
      dockerfile: ./Dockerfile
    container_name: "app_serv1"
    networks:
      - app_network
    ports:
      - "8080"
    environment:
      - INSTANCE=serv1
  
  app_serv2:
    image: node:16
    build:
      context: ./app_serv
      dockerfile: ./Dockerfile
    container_name: "app_serv2"
    networks:
      - app_network
    ports:
      - "8080"
    environment:
      - INSTANCE=serv2

  app_serv3:
    image: node:16
    build:
      context: ./app_serv
      dockerfile: ./Dockerfile
    container_name: "app_serv3"
    networks:
      - app_network
    ports:
      - "8080"
    environment:
      - INSTANCE=serv3

  couchdb:
    image: couchdb
    build:
      context: ./couchdb
      dockerfile: ./Dockerfile
    container_name: "couchdb"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    volumes:
      - ./data:/opt/couchdb/data
    ports:
      - "8082:5984"

  rabbitmq:
    image: rabbitmq
    build:
      context: ./rabbitmq
      dockerfile: ./Dockerfile
    container_name: "rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "8083:5672"
      - "8084:15672"

  logger:
    image: node:16
    #build:
      #context: ./logger
      #dockerfile: ./Dockerfile
    container_name: "logger"
    # ports:
    #   - "8085:8080"
  
networks:
  app_network:
    driver: bridge